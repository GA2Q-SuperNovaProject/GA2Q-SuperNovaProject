#pragma once

/// <summary>
/// 공용으로 쓰일 enum
/// 2023.02.07 [MinseoChoi]
/// </summary>

/// enum 값은 모두 대문자로 지정
/// enum일 경우, 앞에 사용정의 붙이기 예: eSoundChannel -> SOUND_BLABLA

// 음악 추가에 따라 enum 추가
// ex) 배경음 추가 -> BakcGound enum 값 추가
enum eSoundChannel
{
	SOUND_INTRO,
	SOUND_STAGE1,		// Stage1 배경음
	SOUND_STAGE2,		// Stage2 배경음
	SOUND_STAGE3,		// 별의 바다 배경음

	SOUND_SNAKE_PLANET,	// 뱀 행성 배경음
	SOUND_STORY_PLANET,	// 이야기 행성 배경음

	SOUND_BAD_ENDING,	// 배드엔딩 배경음
	SOUND_NORMAL_ENDING,// 노말엔딩 배경음
	SOUND_TRUE_ENDING,	// 트루엔딩 배경음

	SOUND_SHOOTING_STAR_TAIL_CRASH,			// 충돌 소리
	SOUND_SHOOTING_STAR_CRASH,
	SOUND_BLACKHOLE,
	SOUND_BOOSTER,
	SOUND_GET_ITEM,
	SOUND_PORTAL_TO_SEA,
	SOUND_PULL_PLANET,
	SOUND_PUSH_PLANET,
	SOUND_SATELLITE_WARGING,
	SOUND_SATELLITE_BOOM,
	SOUND_STAR_PIECE_1,
	SOUND_STAR_PIECE_2,
	SOUND_STAR_PIECE_3,
};

///[TW]
///eSceneType과 eObjectType은 모두 만들면서 하나의 옵젝 타입이 추가되면 (객체 늘어나는 거 X!)
///본 enum class들에서 하나씩 늘어나야 하며, ObjectManager/SceneManager의 CreateObject, CreateScene에서
///if/else if를 하나씩 넣어야 한다. 
///나중에 여유 생기면 Template화. 

enum class eSceneName
{
	NONE, //ChangeScene용.
	NORMAL,
	MAIN,
	MAIN_OPTION,
	STAGE1,
	STAGE2,
	STAGE3,
	SNAKE_PLANET,
	STORY_PLANET,
	OPENING,
	NORMAL_ENDING,
	BAD_ENDING,
	TRUE_ENDING,
};

enum class eObjectTag
{
	BASIC,

	PLAYER,
	BACKGROUND,

	// UI
	MAIN_UI,
	OPTION_UI,
	INGAME_UI,

	PLANET,
	OBSTACLE,		// 장애물 - 블랙홀, 인공위성
	ITEM,			// 별조각, 유리병, 물약
	EVENTOBJECT,	// 조각상, 포탈
	BULLET,

	// [TW] TWK관련 디버그용
	TWK_OBJECT_ONE,
	TWK_OBJECT_TWO,

	OPENING,
	NORMAL_ENDING,
	TRUE_ENDING,
	BAD_ENDING,

	OPENING_LINE,
	NORMAL_LINE,
	BAD_LINE,
	TRUE_LINE,
};

//앞으로 오브젝트 이름은 String이 아니라 Enum임.
enum class eObjectName
{
	/// Player
	PLAYER,

	/// BackGround
	MAIN_BACKGROUND,
	STAGE1_BACKGROUND,
	STAGE2_BACKGROUND,
	STAGE3_BACKGROUND,
	STAGE4_BACKGROUND,
	SNAKE_BACKGROUND,
	STORY_BACKGROUND,

	/// Main UI
	START_BUTTON,
	OPTION_BUTTON,
	CREDIT_BUTTON,
	QUIT_BUTTON,

	/// Option UI
	OPTION_MENU,
	OPTION_BAR,
	OPTION_BGMBOX,
	OPTION_SOUNDBOX,
	OPTION_QUIT,
	OPTION_GOMAIN,
	OPTION_RETRY,

	/// InGame UI(Item - InGame)
	NOTE_MAIN,
	NOTE_BUTTON,
	BOOSTER_GAGE,
	BOOSTER_ARROW,
	HEALTH_POINT1,
	HEALTH_POINT2,
	HEALTH_POINT3,
	OPTION_ICON,

	/// Planet
	ICE_PLANET,
	LAVA_PLANET,
	SNAKE_PLANET,
	STORY_PLANET,

	/// Obstacle
	BLACKHOLE,
	SATELLITE,
	SHOOTHING_STAR, //얘가 탄막 역할을 하는 별똥별.
	SHOOTHING_STAR_TAIL,

	/// Star
	STAR_PIECE1,
	STAR_PIECE2,
	STAR_PIECE3,

	/// Item - Etc
	GLASS_BOTTLE,
	POTION,

	/// EventObject
	PORTAL,
	BEAR_STATUE,
	BIRD_STATUE,
	DEAR_STATUE,
	GRANDPA_STATUE,
	WHALE_STATUE,
	UNDER_STATUE,

	/// Debug(Taewook)
	DEBUG_BRICK,
	DEBUG_WOOD,

	/// CutScene
	// Opening
	OPENING1,
	OPENING2,
	OPENING3,
	OPENING4,
	OPENING5,

	// Normal
	NORMAL1,

	// Bad
	BAD1,
	BAD2,

	// True
	TRUE1,
	TRUE2,
	TRUE3,
	TRUE4,
	TRUE5,
	TRUE6,
	TRUE7,
	TRUE8_1,
	TRUE8_2,
	TRUE9,
	TRUE10,
	TRUE11,
	TRUE12,
	TRUE13,

	GAMEOVER,
	GAMEOVER_MAIN,
	GAMEOVER_RETRY,

	/// CutScene Line
	// Opening
	OPENING_LINE1,
	OPENING_LINE2,
	OPENING_LINE3,
	OPENING_LINE4,
	OPENING_LINE5,

	// Normal
	NORMAL_LINE1,

	// Bad
	BAD_LINE1,

	// True
	TRUE_LINE1,
	TRUE_LINE2,
	TRUE_LINE3,
	TRUE_LINE4,
	TRUE_LINE5,
	TRUE_LINE6,
	TRUE_LINE7,
	TRUE_LINE8,
	TRUE_LINE9,
	TRUE_LINE10,

	NONE,
};

enum eSsprite
{
	/// Game Title
	IMAGE_TITLE,

	/// 플레이어 캐릭터
	IMAGE_PLAYER,

	/// 스테이지 백그라운드
	IMAGE_STAGE1_BACKGROUND,
	IMAGE_STAGE2_BACKGROUND,
	IMAGE_STAGE3_BACKGROUND,
	IMAGE_PLANET_BACKGROUND,
	IMAGE_SNAKEPLANET_BACKGROUND,
	IMAGE_STORYPLANET_BACKGROUND,

	/// 행성 
	IMAGE_ICE_PLANET,
	IMAGE_LAVA_PLANET,
	IMAGE_SNAKE_PLANET,
	IMAGE_STORY_PLANET,

	/// 블랙홀, 포탈, 인공위성
	IMAGE_BLACKHOLE,
	IMAGE_BLACKHOLE_SIDE,
	IMAGE_PORTAL,
	IMAGE_PORTAL_SEA,
	IMAGE_SATELLITE,

	///워링
	//IMAGE_WARNING,

	/// 별똥별(shootingstar)
	IMAGE_SHOOTING_STAR,
	IMAGE_SHOOTING_STAR_TAIL,

	/// 별조각(starpiece)
	IMAGE_STAR_PIECE1,
	IMAGE_STAR_PIECE2,
	IMAGE_STAR_PIECE3,

	/// 유리병
	IMAGE_GLASS_BOTTLE,
	IMAGE_POTION,

	/// 노트
	IMAGE_NOTE_MAIN,
	IMAGE_NOTE_BUTTON,

	/// 조각상
	IMAGE_BEAR_STATUE,
	IMAGE_BIRD_STATUE,
	IMAGE_DEAR_STATUE,
	IMAGE_GRANDPA_STATUE,
	IMAGE_WHALE_STATUE,
	IMAGE_UNDER_STATUE,

	/// 부스터 게이지
	IMAGE_BOOSTER_GAGE0,
	IMAGE_BOOSTER_GAGE1,
	IMAGE_BOOSTER_GAGE2,
	IMAGE_BOOSTER_GAGE3,

	/// 부스터 화살표
	IMAGE_BOOSTER_ARROW,

	// Main UI
	IMAGE_MAIN_BACKGROUND,
	IMAGE_START,
	IMAGE_START_A,
	IMAGE_OPTION,
	IMAGE_OPTION_A,
	IMAGE_CREDIT,
	IMAGE_CREDIT_A,
	IMAGE_CREDIT_I,
	IMAGE_QUIT,
	IMAGE_QUIT_A,
	IMAGE_OPTION_MENU,
	IMAGE_OPTION_BAR,
	IMAGE_OPTION_BOX,
	IMAGE_OPTION_QUIT,
	IMAGE_OPTION_GO_MAIN,
	IMAGE_OPTION_RETRY,

	IMAGE_NOTE1,
	IMAGE_NOTE1_WRITE,
	IMAGE_NOTE2,
	IMAGE_NOTE2_WRITE,
	IMAGE_NOTE3,
	IMAGE_NOTE3_WRITE,
	IMAGE_NOTE4,
	IMAGE_NOTE4_WRITE,
	IMAGE_NOTE5,
	IMAGE_NOTE5_WRITE,

	IMAGE_HEALTH_POINT,
	IMAGE_OPTION_BUTTON,

	///미션UI
	IMAGE_MISSION_UI,

	// [TW] 테스트. (커밋/업뎃해도, 이는 유지시켜주기를 바람.)
	DEBUG_BRICK,
	DEBUG_GRASS,
	DEBUG_WOOD,

	/// 컷씬
	// 오프닝
	IMAGE_OPENING_SCENE1,
	IMAGE_OPENING_SCENE2,
	IMAGE_OPENING_SCENE3,
	IMAGE_OPENING_SCENE4,
	IMAGE_OPENING_SCENE5,

	// 노멀 앤딩
	IMAGE_NORMAL_SCENE,

	// 배드 앤딩
	IMAGE_BAD_SCENE1,
	IMAGE_BAD_SCENE2,

	// 트루 앤딩
	IMAGE_TRUE_SCENE1,
	IMAGE_TRUE_SCENE2,
	IMAGE_TRUE_SCENE3,
	IMAGE_TRUE_SCENE4,
	IMAGE_TRUE_SCENE5,
	IMAGE_TRUE_SCENE6,
	IMAGE_TRUE_SCENE7,
	IMAGE_TRUE_SCENE8_1,
	IMAGE_TRUE_SCENE8_2,
	IMAGE_TRUE_SCENE9,
	IMAGE_TRUE_SCENE10,
	IMAGE_TRUE_SCENE11,
	IMAGE_TRUE_SCENE12,
	IMAGE_TRUE_SCENE13,

	IMAGE_GAMEOVER,
	IMAGE_GAMEOVER_MAIN,
	IMAGE_GAMEOVER_RETRY,

	/// 컷씬 대사
	// 오프닝
	IMAGE_OPENING_LINE1,
	IMAGE_OPENING_LINE2,
	IMAGE_OPENING_LINE3,
	IMAGE_OPENING_LINE4,
	IMAGE_OPENING_LINE5,

	// 노멀 앤딩
	IMAGE_NORMAL_LINE1,

	// 배드 앤딩
	IMAGE_BAD_LINE1,

	// 트루 앤딩
	IMAGE_TRUE_LINE1,
	IMAGE_TRUE_LINE2,
	IMAGE_TRUE_LINE3,
	IMAGE_TRUE_LINE4,
	IMAGE_TRUE_LINE5,
	IMAGE_TRUE_LINE6,
	IMAGE_TRUE_LINE7,
	IMAGE_TRUE_LINE8,
	IMAGE_TRUE_LINE9,
	IMAGE_TRUE_LINE10,

	// 석상
	IMAGE_BEAR_STORY1,
	IMAGE_BEAR_STORY2,

	IMAGE_DEER_STORY1,
	IMAGE_DEER_STORY2,

	IMAGE_EAGLE_STORY1,
	IMAGE_EAGLE_STORY2,

	IMAGE_WHALE_STORY1,
	IMAGE_WHALE_STORY2,

	IMAGE_GRANDPA_STORY1,
	IMAGE_GRANDPA_STORY2,

};

// GIF
enum eGIFSprite
{
	GIF_STANDING,
	GIF_LEFTSTANDING,
	GIF_UP,
	GIF_LEFTUP,
	GIF_SIDESTANDING,
	GIF_LEFTSIDESTANDING,
	GIF_LDOWN,
	GIF_RDOWN,
	GIF_LGO,
	GIF_RGO,

	GIF_FADEOUT,
	GIF_FADEIN,

	GIF_BEAR_STATUE,
	GIF_BIRD_STATUE,
	GIF_DEAR_STATUE,
	GIF_WHALE_STATUE,
	GIF_GRANDPA_STATUE,
};

// 어떤 콜라이더 타입인지 정하는 Enum Class.
enum class eColType
{
	NONE,	// 콜라이더가 꺼진 상태 정의.
	CIRCLE, // 원 (타원X)
	BOX		// 직사각형

};

enum DISPOSAL_METHODS
{
	DM_UNDEFINED = 0,
	DM_NONE = 1,
	DM_BACKGROUND = 2,
	DM_PREVIOUS = 3
};

enum class eDebugBrush
{
	EDB_RED = 0,
	EDB_GREEN = 1,
	EDB_BLUE = 2,
	EDB_WHITE = 3
};

//탄막이 플레이어의 위치를 한번 받은 뒤 직선으로 날아오냐,
//아니면 꾸준히 N초 동안 따라오면서 (유도탄) 플레이어의 위치를 상세히 받는가?
enum class eBulletType
{
	LINEAR, //일직선
	FOLLOW,  //유도탄
	FAST_TAIL //Shooting Star Tail
};

// 탄막 스폰 난이도.
enum class eBulletDiff
{
	EASY,
	HARD
};
